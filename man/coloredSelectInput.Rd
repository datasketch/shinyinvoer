% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/input-coloredSelect.R
\name{coloredSelectInput}
\alias{coloredSelectInput}
\title{Colored Select Input}
\usage{
coloredSelectInput(
  inputId,
  label = NULL,
  choices = NULL,
  selected = NULL,
  multiple = FALSE,
  placeholder = "Select an option...",
  width = NULL
)
}
\arguments{
\item{inputId}{The \code{input} slot that will be used to access the value.}

\item{label}{Display label for the control, or \code{NULL} for no label.}

\item{choices}{List of options. Each option should be a list with 'value', 'label', and 'color' fields.
If a simple vector is provided, it will be converted to the proper format.}

\item{selected}{The initially selected value(s). For multiple selection, provide a vector.}

\item{multiple}{Is multiple selection allowed?}

\item{placeholder}{Character string giving the user a hint as to what can be typed into the control.}

\item{width}{The width of the input, e.g. '400px', or '100\%'.}
}
\value{
A colored select input control that can be added to a UI definition.
}
\description{
A custom select input widget similar to selectizeInput but with the ability to
display colored backgrounds for selected options. Supports both single and multiple
selection modes.
}
\examples{
\dontrun{
## Only run examples in interactive R sessions
if (interactive()) {

# Single selection with colors
ui <- fluidPage(
  coloredSelectInput(
    "color1",
    "Choose a color:",
    choices = list(
      list(value = "red", label = "Red", color = "#ff0000"),
      list(value = "green", label = "Green", color = "#00ff00"),
      list(value = "blue", label = "Blue", color = "#0000ff")
    )
  ),
  verbatimTextOutput("result1")
)

# Multiple selection
ui <- fluidPage(
  coloredSelectInput(
    "color2",
    "Choose multiple colors:",
    choices = list(
      list(value = "red", label = "Red", color = "#ff0000"),
      list(value = "green", label = "Green", color = "#00ff00"),
      list(value = "blue", label = "Blue", color = "#0000ff"),
      list(value = "yellow", label = "Yellow", color = "#ffff00")
    ),
    multiple = TRUE,
    selected = c("red", "blue")
  ),
  verbatimTextOutput("result2")
)

server <- function(input, output, session) {
  output$result1 <- renderPrint({ input$color1 })
  output$result2 <- renderPrint({ input$color2 })
}

shinyApp(ui, server)
}
}

}
