% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/input-buttonImage.R
\name{buttonImageInput}
\alias{buttonImageInput}
\title{Grouped buttons with image}
\usage{
buttonImageInput(
  inputId,
  label = NULL,
  images = NULL,
  active = NULL,
  disabled = NULL,
  tooltips = NULL,
  path = NULL,
  ncol = NULL,
  nrow = NULL,
  highlightColor = NULL,
  checkmark = FALSE,
  imageStyle = list(borderColor = "black", borderSize = "0px", padding = "0", shadow =
    FALSE),
  class = "button-style",
  classImg = "image-style"
)
}
\arguments{
\item{inputId}{The \code{input} slot that will be used to access the value.}

\item{images}{List of id inputs when pressing each button.}

\item{active}{Initial button selected.}

\item{path}{Folder where the images are stored.}

\item{ncol}{Number of images per row.}

\item{nrow}{Number of images per column.}

\item{class}{Name of the class which contains the button´s style}

\item{classImg}{class Name of the class which contains the images´ style.}

\item{imageStyles}{Styles for the images (border, shadow, padding, background).}
}
\value{
A group of buttons which can be controlled from the UI.
}
\description{
Create grouped buttons with image to choose a single button and get its id.
}
\examples{
\dontrun{
## Only run examples in interactive R sessions
if (interactive()) {

ui <- fluidPage(
    uiOutput('button'),
    verbatimTextOutput('input_button')
)
server <- function(input, output) {
 # you must crate a path in www for saving images (www/img/...)
 output$button <- renderUI({
                  buttonImageInput(inputId = 'chosen_button',
                  images = c("cat", "dog", "fox"),
                  ncol = 2,
                  active = 'dog',
                  path = "img/")
                  })
# print input id when clicking
output$input_button <- renderPrint({
                   input$chosen_button
                  })
}
shinyApp(ui, server)
}
}


}
